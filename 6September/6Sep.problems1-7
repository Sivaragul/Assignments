program.cs
----------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.ConstrainedExecution;
using System.Text;
using System.Threading.Tasks;
using AccessSpecifierLib;

namespace _06._09._2022
{
    internal class Program
    {
        static void Main(string[] args)
        {



            Person p= new Employee();
            p.Work();
            Person p1 = new Manager();
            p1.Work();
            Person p2= new Clerk();
            p2.Work();

            Console.WriteLine("==============================================================");

            Saving s = new Saving();
            s.PrintBalance();
            int r = s.CalculateInterest();

            Console.WriteLine(r);
            
            
            Console.WriteLine("The Deposited amt is 2000:");
            s.Deposit(2000);
            Console.WriteLine("The amt withdrawing 1000:");
            s.Withdraw(1000);

            Console.WriteLine("The last updated date: " + s.D);

            Console.WriteLine("===============================================================");

            Current c = new Current();
            c.PrintBalance();
            int r1 = c.CalculateInterest();
            Console.WriteLine(r1);

            Console.WriteLine("The amt  withdrawing 1000:");
            c.Withdraw(1000);
            
            Console.WriteLine("The Deposited amt is 3000:");
            c.Deposit(3000);
            Console.WriteLine("The last updated date :" + c.D1);
            
            Console.ReadLine();
        }
    }
}

====================================================================================================================================================================

class1.cs
---------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AccessSpecifierLib
{
    public abstract class Person
    {

        public abstract void Work();

    }


    public class Employee : Person
    {

        public override void Work()
        {
            Console.WriteLine("Calling the Employee");
        }
    }

    public class Manager : Person
    {
        public override void Work()
        {
            Console.WriteLine("Calling the Manager");
        }

    }

    public class Clerk : Person
    {
        public override void Work()
        {
            Console.WriteLine("Calling the Clerk");
        }

    }

    public interface IBank
    {
        void PrintBalance();
        int CalculateInterest();

    }

    public class Saving : IBank
    {
        public DateTime D = new DateTime(2012, 08, 07);

        public void PrintBalance()
        {
            Console.WriteLine("Balance is " + a);
        }

       
        public int CalculateInterest()
        { 
            return a / Interestrate;
        }

        public int a = 50000;
        public int Interestrate = 4;
    }

    public class Current : IBank
    {
        public DateTime D1 = new DateTime(2012, 08, 07);
        public void PrintBalance()
        {
            Console.WriteLine("Balance is " + a1);
        }

        public int CalculateInterest()
        { 
            return a1 / Interestrate; 
        }

        public int a1 = 20000;

        public int Interestrate = 2;


    }


}

===============================================================================================================================================================

ExtensionMethod.cs
------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AccessSpecifierLib
{
    public static class ExtensionMethod
    {
        public static void Withdraw(this Saving s, int amount)
        {
            s.a -= amount;
            s.PrintBalance();
        }

        public static void Withdraw(this Current s, int amount)
        {
            s.a1 -= amount;
            s.PrintBalance();
        }

        public static void Deposit(this Saving s, int amount)
        {
            s.a += amount;
            s.PrintBalance();
        }
        public static void Deposit(this Current s, int amount)
        {
            s.a1 += amount;
            s.PrintBalance();
        }

    }
}


